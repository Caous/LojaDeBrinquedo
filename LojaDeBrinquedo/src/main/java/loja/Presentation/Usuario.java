/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loja.Presentation;

import loja.Dominio.Util.PropertiesValidator;
import loja.Presentation.Controller.UserController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import loja.Dominio.Model.ClienteModel;
import loja.Dominio.Model.MenuModel;
import loja.Dominio.Model.PerfilModel;
import loja.Dominio.Model.UserModel;
import loja.Dominio.Util.eAcaoTela;
import loja.Presentation.Controller.MenuController;
import loja.Presentation.Controller.PerfilController;

/**
 *
 * @author Gustavo Nascimento
 */
public class Usuario extends javax.swing.JFrame {

    /**
     * Creates new form Usuario
     */
    public Usuario() {
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
        CarregaComboBox();
    }

    public Usuario(UserModel user) {
        this.usuSystem = user;
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
        CarregaComboBox();
    }

    private UserModel usuSystem;
    private int acaoTela;
    private UserModel userm;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnBg = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rbMasc = new javax.swing.JRadioButton();
        rbFem = new javax.swing.JRadioButton();
        btnPesquisar = new javax.swing.JButton();
        lblControle = new javax.swing.JLabel();
        ckbExcluir = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        cbxPerfil = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        txtSenha = new javax.swing.JPasswordField();
        txtCpf = new javax.swing.JFormattedTextField();
        txtDtNascimento = new javax.swing.JFormattedTextField();
        txtEstadoCivil = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1280, 720));

        jpnBg.setBackground(new java.awt.Color(201, 232, 242));
        jpnBg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblUsuarios.setBackground(new java.awt.Color(64, 87, 184));
        tblUsuarios.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tblUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblUsuarios.setGridColor(new java.awt.Color(64, 87, 184));
        tblUsuarios.setSelectionForeground(new java.awt.Color(79, 109, 234));
        tblUsuarios.setShowGrid(true);
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        jpnBg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 900, 240));

        txtNome.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        txtNome.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14))); // NOI18N
        jpnBg.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 210, 60));

        txtEmail.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "E-mail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14))); // NOI18N
        jpnBg.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 210, 60));

        rbMasc.setBackground(new java.awt.Color(201, 232, 242));
        rbMasc.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        rbMasc.setText("Masculino");
        rbMasc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbMascMouseClicked(evt);
            }
        });
        jpnBg.add(rbMasc, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, -1, -1));

        rbFem.setBackground(new java.awt.Color(201, 232, 242));
        rbFem.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        rbFem.setText("Feminino");
        rbFem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbFemMouseClicked(evt);
            }
        });
        jpnBg.add(rbFem, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 150, -1, -1));

        btnPesquisar.setBackground(new java.awt.Color(51, 102, 255));
        btnPesquisar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setBorder(null);
        btnPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jpnBg.add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 170, 50));

        lblControle.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        lblControle.setText("Controle de usu√°rios");
        jpnBg.add(lblControle, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        ckbExcluir.setBackground(new java.awt.Color(201, 232, 242));
        ckbExcluir.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        ckbExcluir.setForeground(new java.awt.Color(204, 0, 0));
        ckbExcluir.setText("Excluir");
        jpnBg.add(ckbExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 150, -1, -1));

        jTable2.setBackground(new java.awt.Color(64, 87, 184));
        jTable2.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(255, 255, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Bola de futebol", "10", "69,90", "Nike", "Nike", "5"},
                {"Boneca", "5", "120,00", "Barbie", "Happy", "0"},
                {"Nerf", "2", "50,00", "Nerf", "Disneylandia", "2"}
            },
            new String [] {
                "Nome", "Qtd", "Valor", "Marca", "Fornecedor", "Desconto"
            }
        ));
        jTable2.setGridColor(new java.awt.Color(64, 87, 184));
        jTable2.setSelectionForeground(new java.awt.Color(64, 87, 184));
        jTable2.setShowGrid(true);
        jScrollPane2.setViewportView(jTable2);

        jpnBg.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 900, 150));

        btnSalvar.setBackground(new java.awt.Color(61, 189, 61));
        btnSalvar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar");
        btnSalvar.setBorder(null);
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jpnBg.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 170, 50));

        cbxPerfil.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        cbxPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPerfilActionPerformed(evt);
            }
        });
        jpnBg.add(cbxPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 210, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel1.setText("Perfil:");
        jpnBg.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        btnCancelar.setBackground(new java.awt.Color(255, 153, 0));
        btnCancelar.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(null);
        btnCancelar.setBorderPainted(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jpnBg.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 140, 50));

        txtSenha.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Senha", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jpnBg.add(txtSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 200, 60));

        txtCpf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CPF:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 12))); // NOI18N
        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jpnBg.add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 210, 60));

        txtDtNascimento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dt. Nascimento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14))); // NOI18N
        try {
            txtDtNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jpnBg.add(txtDtNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 70, 210, 60));

        txtEstadoCivil.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        txtEstadoCivil.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estado Civil", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14))); // NOI18N
        jpnBg.add(txtEstadoCivil, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 210, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnBg, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnBg, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CarregaComboBox() {

        PerfilController perfilController = new PerfilController();
        PerfilModel perfilFiltro = new PerfilModel();
        List<PerfilModel> perfils = perfilController.findAll(perfilFiltro);

        for (int i = 0; i < perfils.size(); i++) {
            cbxPerfil.addItem(perfils.get(i).getPerfil());
        }

    }

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        GerenciarBotoes();

        if (acaoTela == eAcaoTela.VISUALIZAR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }
        if (acaoTela == eAcaoTela.ABRIR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }

        UserController usuController = new UserController();

        boolean valid = PreencherUsuarios(userm);

        if (valid) {

            switch (acaoTela) {
                case 1:
                    if (usuController.save(userm)) {
                        JOptionPane.showMessageDialog(null, "Usu√°rio cadastrado com sucesso", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Houve um erro na exclus√£o do usu√°rio", "Erro", JOptionPane.INFORMATION_MESSAGE);
                    }
                    break;
                case 5:
                    if (usuController.update(userm)) {
                        JOptionPane.showMessageDialog(null, "Usu√°rio atualizado com sucesso", "Altera√ß√£o", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Houve um erro na exclus√£o do usu√°rio", "Erro", JOptionPane.INFORMATION_MESSAGE);
                    }
                    break;
                case 6:
                    Date dt = new Date();

                    userm.setDtDel(dt);

                    if (this.usuSystem == null) {
                        userm.setUsuDel(1);
                    } else {
                        userm.setUsuInclus(this.usuSystem.getId());
                    }

                    if (usuController.finishValidity(userm)) {
                        JOptionPane.showMessageDialog(null, "Usu√°rio deletado com sucesso", "Altera√ß√£o", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Houve um erro na exclus√£o do usu√°rio", "Erro", JOptionPane.INFORMATION_MESSAGE);
                    }

                    break;
            }

            LimparCampos();
            LoadTable();
            acaoTela = eAcaoTela.ABRIR.getValor();
            GerenciarBotoes();
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed

        GerenciarBotoes();

        UserController userControll = new UserController();
        UserModel user = new UserModel();

        try {
            if (user.validString(txtNome.getText())) {
                user.setNome(txtNome.getText());
            }

            if (user.validString(txtEmail.getText())) {
                user.setEmail(txtEmail.getText());
            }

            if (user.validString(txtCpf.getText().replaceAll("\\p{Punct}", ""))) {
                user.setCPF(txtCpf.getText().replaceAll("\\p{Punct}", ""));
            }

            if (user.validString(txtDtNascimento.getText().replaceAll("\\p{Punct}", ""))) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                user.setDtNasc(formatter1.parse(txtDtNascimento.getText().replaceAll("\\p{Punct}", "")));
            }

            if (user.validString(txtEstadoCivil.getText())) {
                user.setEmail(txtEstadoCivil.getText());
            }
            if (ckbExcluir.isSelected()) {
                user.setUsuDel(-1);
            }

        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<UserModel> users = UserController.findAll(user);
        LoadTableFilter(users);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        if (tblUsuarios.getSelectedRow() >= 0) {

            acaoTela = eAcaoTela.EDITAR.getValor();
            GerenciarBotoes();
            int id = Integer.parseInt(tblUsuarios.getModel().getValueAt(tblUsuarios.getSelectedRow(), 0).toString());

            if (ckbExcluir.isSelected()) {
                acaoTela = eAcaoTela.EXCLUIR.getValor();
            } else {
                acaoTela = eAcaoTela.EDITAR.getValor();
            }

            CarregarCampos(id);

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um usu√°rio para editar!");
        }

    }//GEN-LAST:event_tblUsuariosMouseClicked

    public void CarregarCampos(int id) {

        UserController userController = new UserController();

        userm = userController.findId(id);

        if (userm.getNome() != null) {
            txtNome.setText(userm.getNome());
        } else {
            txtNome.setText("N√£o Encontrado");
        }

        if (userm.getEmail() != null) {
            txtEmail.setText(userm.getEmail());
        } else {
            txtEmail.setText("N√£o Encontrado");
        }

        if (userm.getPassword() != null) {
            txtSenha.setText(userm.getPassword());
        } else {
            txtSenha.setText("N√£o Encontrado");
        }

        SimpleDateFormat formatter1 = new SimpleDateFormat("dd/MM/yyyy");

        if (userm.getDtNasc() != null) {
            txtDtNascimento.setText(formatter1.format(userm.getDtNasc()).toString());
        } else {
            txtDtNascimento.setText("00000000");
        }

        if (userm.getCPF() != null) {
            txtCpf.setText(userm.getCPF());
        } else {
            txtCpf.setText("N√£o Encontrado");
        }

        if (userm.getEstadoCivil() != null) {
            txtEstadoCivil.setText(userm.getEstadoCivil());
        } else {
            txtEstadoCivil.setText("N√£o Encontrado");
        }

        if (userm.getSexo() != null && userm.getSexo().equals("Masculino")) {
            rbMasc.setSelected(true);
        }
        if (userm.getSexo() != null && userm.getSexo().equals("Feminino")) {
            rbMasc.setSelected(true);
        }
        if (userm.getSexo() == null || userm.getSexo().equals("N/A")) {
            rbMasc.setSelected(false);
            rbFem.setSelected(false);
        }

    }

    private void cbxPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPerfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxPerfilActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        LimparCampos();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void rbMascMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbMascMouseClicked

        rbFem.setSelected(false);

    }//GEN-LAST:event_rbMascMouseClicked

    private void rbFemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbFemMouseClicked

        rbMasc.setSelected(false);

    }//GEN-LAST:event_rbFemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxPerfil;
    private javax.swing.JCheckBox ckbExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel jpnBg;
    private javax.swing.JLabel lblControle;
    private javax.swing.JRadioButton rbFem;
    private javax.swing.JRadioButton rbMasc;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtDtNascimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstadoCivil;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables

    private void LoadTableFilter(List<UserModel> users) {

        DefaultTableModel tmUsers = new DefaultTableModel();
        tmUsers.addColumn("ID");
        tmUsers.addColumn("Nome");
        tmUsers.addColumn("CPF");
        tmUsers.addColumn("E-mail");

        tblUsuarios.setModel(tmUsers);

        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(50);

        tmUsers.setRowCount(0);

        for (UserModel user : users) {
            tmUsers.addRow(new String[]{String.valueOf(user.getId()),
                user.getNome(), user.getCPF(), user.getEmail()});
        }

    }

    private void LoadTable() {

        UserController usersController = new UserController();
        UserModel userFiltro = new UserModel();
        List<UserModel> users = usersController.findAll(userFiltro);

        DefaultTableModel tmUser = new DefaultTableModel();
        tmUser.addColumn("ID");
        tmUser.addColumn("Nome");
        tmUser.addColumn("CPF");
        tmUser.addColumn("E-mail");

        tblUsuarios.setModel(tmUser);

        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(50);

        tmUser.setRowCount(0);

        for (UserModel userm : users) {
            tmUser.addRow(new String[]{String.valueOf(userm.getId()),
                userm.getNome(), userm.getCPF(), userm.getEmail()});
        }

    }

    private boolean PreencherUsuarios(UserModel entity) {

        if (entity == null) {
            entity = new UserModel();
        }

        try {

            if (entity.validString(txtNome.getText())) {
                entity.setNome(txtNome.getText());
            } else {

                JOptionPane.showMessageDialog(null, "Por favor preencher o nome ou com caracteres m√≠nimos", "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (entity.validString(txtEmail.getText())) {
                entity.setEmail(txtEmail.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Por favor preencher o E-mail ou com caracteres m√≠nimos", "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (entity.validString(txtSenha.getText())) {
                entity.setPassword(txtSenha.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Por favor preencher a senha ou com caracteres m√≠nimos", "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (entity.validString(txtDtNascimento.getText().replaceAll("\\p{Punct}", ""))) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                entity.setDtNasc(formatter1.parse(txtDtNascimento.getText().replace("/", "-")));
            } else {
                JOptionPane.showMessageDialog(null, "Por favor preencher a Data de Nascimento ou com caracteres m√≠nimos", "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (entity.validString(txtCpf.getText().replaceAll("\\p{Punct}", ""))) {
                entity.setCPF(txtCpf.getText().replaceAll("\\p{Punct}", ""));
            } else {
                JOptionPane.showMessageDialog(null, "Por favor preencher o CPF ou com caracteres m√≠nimos", "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (rbFem.isSelected()) {
                entity.setSexo("Feminino");
            }
            if (rbMasc.isSelected()) {
                entity.setSexo("Masculino");
            }

            if (entity.validString(txtEstadoCivil.getText())) {
                entity.setEstadoCivil(txtEstadoCivil.getText());
            }

            if (entity.validString(cbxPerfil.getSelectedItem().toString())) {

                PerfilController perfilController = new PerfilController();
                PerfilModel perfilFiltro = new PerfilModel();
                perfilFiltro.setPerfile(cbxPerfil.getSelectedItem().toString());

                List<PerfilModel> perfils = perfilController.findAll(perfilFiltro);

                entity.setIdPerfil(perfils.get(0).getId());
            } else {
                JOptionPane.showMessageDialog(null, "Por favor Selecionar um Perfil", "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (ckbExcluir.isSelected()) {
                acaoTela = eAcaoTela.EXCLUIR.getValor();
                if (this.usuSystem != null && userm.validInt(this.usuSystem.getId())) {
                    entity.setUsuDel(this.usuSystem.getId());
                }
            }

        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex, "Convers√£o errada", JOptionPane.WARNING_MESSAGE);
        }

        this.userm = entity;
        return true;
    }

    private void LimparCampos() {
        txtNome.setText("");
        txtEmail.setText("");
        txtSenha.setText("");
        txtDtNascimento.setText("");
        txtEstadoCivil.setText("");
        txtCpf.setText("");
        rbFem.setSelected(false);
        rbMasc.setSelected(false);

    }

    private void GerenciarBotoes() {

        switch (acaoTela) {
            case 1:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 2:
                btnSalvar.setEnabled(true);
                btnPesquisar.setEnabled(true);
                break;
            case 3:
                btnPesquisar.setEnabled(true);
                btnSalvar.setEnabled(false);
                break;
            case 4:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(false);
                break;
            case 5:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 6:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;

        }

    }
}
