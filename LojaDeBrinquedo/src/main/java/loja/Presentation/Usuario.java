/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loja.Presentation;

import loja.Dominio.Util.PropertiesValidator;
import loja.Presentation.Controller.UserController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import loja.Dominio.Model.ClienteModel;
import loja.Dominio.Model.UserModel;
import loja.Dominio.Util.eAcaoTela;

/**
 *
 * @author Gustavo Nascimento
 */
public class Usuario extends javax.swing.JFrame {

    /**
     * Creates new form Usuario
     */
    public Usuario() {
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
    }
    
    public Usuario(UserModel user){
        this.usuSystem = user;
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
    }
    
    private UserModel usuSystem;
    private int acaoTela;
    private UserModel userm;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnBg = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        txtNome = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtDtNascimento = new javax.swing.JTextField();
        txtCpf = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        rbMasc = new javax.swing.JRadioButton();
        rbFem = new javax.swing.JRadioButton();
        btnPesquisar = new javax.swing.JButton();
        lblControle = new javax.swing.JLabel();
        cbxPerfil = new javax.swing.JComboBox<>();
        ckbExcluir = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(994, 623));

        jpnBg.setBackground(new java.awt.Color(79, 109, 234));
        jpnBg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblUsuarios.setBackground(new java.awt.Color(64, 87, 184));
        tblUsuarios.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        tblUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblUsuarios.setGridColor(new java.awt.Color(64, 87, 184));
        tblUsuarios.setSelectionForeground(new java.awt.Color(79, 109, 234));
        tblUsuarios.setShowGrid(true);
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        jpnBg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 900, 240));

        txtNome.setBackground(new java.awt.Color(79, 109, 234));
        txtNome.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtNome.setForeground(new java.awt.Color(255, 255, 255));
        txtNome.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jpnBg.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 210, -1));

        txtEmail.setBackground(new java.awt.Color(79, 109, 234));
        txtEmail.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtEmail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "E-mail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jpnBg.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 210, -1));

        txtDtNascimento.setBackground(new java.awt.Color(79, 109, 234));
        txtDtNascimento.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtDtNascimento.setForeground(new java.awt.Color(255, 255, 255));
        txtDtNascimento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dt. Nascimento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jpnBg.add(txtDtNascimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 70, 210, -1));

        txtCpf.setBackground(new java.awt.Color(79, 109, 234));
        txtCpf.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtCpf.setForeground(new java.awt.Color(255, 255, 255));
        txtCpf.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CPF", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jpnBg.add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 210, -1));

        txtPass.setBackground(new java.awt.Color(79, 109, 234));
        txtPass.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtPass.setForeground(new java.awt.Color(255, 255, 255));
        txtPass.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Senha", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jpnBg.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 210, -1));

        rbMasc.setBackground(new java.awt.Color(79, 109, 234));
        rbMasc.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        rbMasc.setForeground(new java.awt.Color(255, 255, 255));
        rbMasc.setText("Masculino");
        jpnBg.add(rbMasc, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, -1, -1));

        rbFem.setBackground(new java.awt.Color(79, 109, 234));
        rbFem.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        rbFem.setForeground(new java.awt.Color(255, 255, 255));
        rbFem.setText("Feminino");
        jpnBg.add(rbFem, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, -1, -1));

        btnPesquisar.setBackground(new java.awt.Color(51, 153, 0));
        btnPesquisar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setBorder(null);
        btnPesquisar.setContentAreaFilled(false);
        btnPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisar.setOpaque(true);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        jpnBg.add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 170, 50));

        lblControle.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        lblControle.setForeground(new java.awt.Color(255, 255, 255));
        lblControle.setText("Controle de usu√°rios");
        jpnBg.add(lblControle, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        cbxPerfil.setBackground(new java.awt.Color(79, 109, 234));
        cbxPerfil.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        cbxPerfil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxPerfil.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Perfil", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik", 1, 14))); // NOI18N
        cbxPerfil.setOpaque(false);
        jpnBg.add(cbxPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 210, 50));

        ckbExcluir.setBackground(new java.awt.Color(79, 109, 234));
        ckbExcluir.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        ckbExcluir.setForeground(new java.awt.Color(255, 255, 255));
        ckbExcluir.setText("Excluir");
        jpnBg.add(ckbExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, -1, -1));

        jTable2.setBackground(new java.awt.Color(64, 87, 184));
        jTable2.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(255, 255, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Bola de futebol", "10", "69,90", "Nike", "Nike", "5"},
                {"Boneca", "5", "120,00", "Barbie", "Happy", "0"},
                {"Nerf", "2", "50,00", "Nerf", "Disneylandia", "2"}
            },
            new String [] {
                "Nome", "Qtd", "Valor", "Marca", "Fornecedor", "Desconto"
            }
        ));
        jTable2.setGridColor(new java.awt.Color(64, 87, 184));
        jTable2.setSelectionForeground(new java.awt.Color(64, 87, 184));
        jTable2.setShowGrid(true);
        jScrollPane2.setViewportView(jTable2);

        jpnBg.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 900, 150));

        btnSalvar.setBackground(new java.awt.Color(64, 87, 184));
        btnSalvar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar");
        btnSalvar.setBorder(null);
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSalvar.setOpaque(true);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jpnBg.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 170, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnBg, javax.swing.GroupLayout.DEFAULT_SIZE, 960, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnBg, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        GerenciarBotoes();
        if (acaoTela == eAcaoTela.VISUALIZAR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }
        if (acaoTela == eAcaoTela.ABRIR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }
        
        UserController usuController = new UserController();
        
        UserModel user = new UserModel();
        
        if (acaoTela == eAcaoTela.EDITAR.getValor() || acaoTela == eAcaoTela.EXCLUIR.getValor()) {
            user = userm;
        }
        
        user = PreencherUsuarios(user);
        
        boolean result = false;
        
        switch (acaoTela) {
            case 1:
                result = usuController.save(user);
                break;
            case 5:
                result = usuController.update(user);
                break;
            case 6:
                Date dt = new Date();

                user.setDtDel(dt);

                if (this.usuSystem == null) {
                    user.setUsuDel(1);
                } else {
                    user.setUsuInclus(this.usuSystem.getId());
                }

                result = usuController.finishValidity(user);
                break;
        }
        
        if (result){
            
        }
        LimparCampos();
        LoadTable();
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        
        GerenciarBotoes();
        
        UserController userControll = new UserController();
        UserModel user = new UserModel();

        try {
            if (user.validString(txtNome.getText())) {
                user.setNome(txtNome.getText());
            }

            if (user.validString(txtEmail.getText())) {
                user.setEmail(txtEmail.getText());
            }        

            if (user.validString(txtCpf.getText())) {
                user.setCPF(txtCpf.getText());
            }

            if (user.validString(txtDtNascimento.getText())) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                user.setDtNasc(formatter1.parse(txtDtNascimento.getText()));
            }



        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        List<UserModel> users = UserController.findAll(user);
        LoadTableFilter(users);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        if (ckbExcluir.isSelected()) {
            acaoTela = eAcaoTela.EXCLUIR.getValor();
        } else {
            acaoTela = eAcaoTela.EDITAR.getValor();
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxPerfil;
    private javax.swing.JCheckBox ckbExcluir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel jpnBg;
    private javax.swing.JLabel lblControle;
    private javax.swing.JRadioButton rbFem;
    private javax.swing.JRadioButton rbMasc;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtDtNascimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtPass;
    // End of variables declaration//GEN-END:variables

    private void LoadTableFilter(List<UserModel> users) {
        
        DefaultTableModel tmUsers = new DefaultTableModel();
        tmUsers.addColumn("ID");
        tmUsers.addColumn("Nome");
        tmUsers.addColumn("CPF");
        tmUsers.addColumn("E-mail");
        
        
        tblUsuarios.setModel(tmUsers);
 
        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(50);
        
        tmUsers.setRowCount(0);
        
        for (UserModel user : users) {
            tmUsers.addRow(new String[]{String.valueOf(user.getId()),
                user.getNome(), user.getCPF(), user.getEmail()});
        }
        
        
    }

    private void LoadTable() {
        
        UserController usersController = new UserController();
        UserModel userFiltro = new UserModel();
        List<UserModel> users = usersController.findAll(userFiltro);
        
        DefaultTableModel tmUser = new DefaultTableModel();
        tmUser.addColumn("ID");
        tmUser.addColumn("Nome");
        tmUser.addColumn("CPF");
        tmUser.addColumn("E-mail");
        
        
        tblUsuarios.setModel(tmUser);
        
        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblUsuarios.getColumnModel().getColumn(1).setPreferredWidth(50);
        
        tmUser.setRowCount(0);
        
        for (UserModel userm : users){
            tmUser.addRow(new String[] {String.valueOf(userm.getId()),
            userm.getNome(),userm.getCPF(),userm.getEmail()});
        }
       
    }

    private UserModel PreencherUsuarios(UserModel userm) {
        
        if (userm == null){
            userm = new UserModel();
        }
        
        try {
            
            if (userm.validString(txtNome.getText())){
                userm.setNome(txtNome.getText());
            }
            
            if (userm.validString(txtEmail.getText())){
                userm.setEmail(txtEmail.getText());
            }
            
            if (userm.validString(txtPass.getPassword().toString())){
                userm.setPassword(txtPass.getPassword().toString());
            }
            
            if (userm.validString(txtDtNascimento.getText())) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                userm.setDtNasc(formatter1.parse(txtDtNascimento.getText().replace("/", "-")));
            }
            
            if (userm.validString(txtCpf.getText())){
                userm.setCPF(txtCpf.getText());
            }
            
            if (rbFem.isSelected()) {
                userm.setSexo("Feminino");
            }
            if (rbMasc.isSelected()) {
                userm.setSexo("Masculino");
            }            
            
            
                
                } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigat√≥rios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return userm;
    }

    private void LimparCampos() {
        txtNome.setText("");
        txtEmail.setText("");
        txtPass.setText("");
        txtDtNascimento.setText("");
        txtCpf.setText("");
        
    }

    private void GerenciarBotoes() {
        
        switch (acaoTela){
            case 1:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 2:
                btnSalvar.setEnabled(true);
                btnPesquisar.setEnabled(true);
                break;
            case 3:
                btnPesquisar.setEnabled(true);
                btnSalvar.setEnabled(false);
                break;
            case 4:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(false);
                break;
            case 5:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 6:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
        
        }
        
    }
}
