/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loja.Presentation;

import java.text.ParseException;
import loja.Dominio.Util.PropertiesValidator;
import loja.Presentation.Controller.ProdutoController;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import loja.Dominio.Model.ProdutoModel;
import loja.Dominio.Model.UserModel;
import loja.Dominio.Util.eAcaoTela;

/**
 *
 * @author Gustavo Nascimento
 */
public class Produto extends javax.swing.JFrame {

    /**
     * Creates new form Usuario
     */
    public Produto() {
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
    }
    
    public Produto(UserModel user){
        this.usuSystem = user;
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
    }
    
    private UserModel usuSystem;
    private int acaoTela;
    private ProdutoModel prodm;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnBg = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        txtNome = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        lblProduto = new javax.swing.JLabel();
        txtFot = new javax.swing.JTextField();
        txtValidade = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        txtAvaliacao = new javax.swing.JTextField();
        txtaComentario = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtaDescrição = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        txtQtd = new javax.swing.JTextField();
        txtDesconto = new javax.swing.JTextField();
        txtFornecedor = new javax.swing.JTextField();
        ckbExcluir = new javax.swing.JCheckBox();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnBg.setBackground(new java.awt.Color(79, 109, 234));

        tblProdutos.setBackground(new java.awt.Color(64, 87, 184));
        tblProdutos.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        tblProdutos.setForeground(new java.awt.Color(255, 255, 255));
        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblProdutos.setGridColor(new java.awt.Color(64, 87, 184));
        tblProdutos.setSelectionForeground(new java.awt.Color(64, 87, 184));
        tblProdutos.setShowGrid(true);
        jScrollPane1.setViewportView(tblProdutos);

        txtNome.setBackground(new java.awt.Color(79, 109, 234));
        txtNome.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtNome.setForeground(new java.awt.Color(255, 255, 255));
        txtNome.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtCategoria.setBackground(new java.awt.Color(79, 109, 234));
        txtCategoria.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtCategoria.setForeground(new java.awt.Color(255, 255, 255));
        txtCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Categoria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtMarca.setBackground(new java.awt.Color(79, 109, 234));
        txtMarca.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtMarca.setForeground(new java.awt.Color(255, 255, 255));
        txtMarca.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Marca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        btnSalvar.setBackground(new java.awt.Color(64, 87, 184));
        btnSalvar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar");
        btnSalvar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lblProduto.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        lblProduto.setForeground(new java.awt.Color(255, 255, 255));
        lblProduto.setText("Controle de Produtos");

        txtFot.setBackground(new java.awt.Color(79, 109, 234));
        txtFot.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtFot.setForeground(new java.awt.Color(255, 255, 255));
        txtFot.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtValidade.setBackground(new java.awt.Color(79, 109, 234));
        txtValidade.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtValidade.setForeground(new java.awt.Color(255, 255, 255));
        txtValidade.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Validade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtValor.setBackground(new java.awt.Color(79, 109, 234));
        txtValor.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtValor.setForeground(new java.awt.Color(255, 255, 255));
        txtValor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "R$", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtAvaliacao.setBackground(new java.awt.Color(79, 109, 234));
        txtAvaliacao.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtAvaliacao.setForeground(new java.awt.Color(255, 255, 255));
        txtAvaliacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Avaliação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtaComentario.setBackground(new java.awt.Color(79, 109, 234));
        txtaComentario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comentário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        txtaComentario.setToolTipText("");

        jTextArea1.setBackground(new java.awt.Color(79, 109, 234));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Rubik", 1, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        txtaComentario.setViewportView(jTextArea1);

        txtaDescrição.setBackground(new java.awt.Color(79, 109, 234));
        txtaDescrição.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Descrição", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jTextArea2.setBackground(new java.awt.Color(79, 109, 234));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Rubik", 1, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        txtaDescrição.setViewportView(jTextArea2);

        txtQtd.setBackground(new java.awt.Color(79, 109, 234));
        txtQtd.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtQtd.setForeground(new java.awt.Color(255, 255, 255));
        txtQtd.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quantidade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtDesconto.setBackground(new java.awt.Color(79, 109, 234));
        txtDesconto.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtDesconto.setForeground(new java.awt.Color(255, 255, 255));
        txtDesconto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Porcentagem %", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtFornecedor.setBackground(new java.awt.Color(79, 109, 234));
        txtFornecedor.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtFornecedor.setForeground(new java.awt.Color(255, 255, 255));
        txtFornecedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Fornecedor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        ckbExcluir.setBackground(new java.awt.Color(79, 109, 234));
        ckbExcluir.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        ckbExcluir.setForeground(new java.awt.Color(255, 255, 255));
        ckbExcluir.setText("Excluir");

        btnPesquisar.setBackground(new java.awt.Color(51, 153, 0));
        btnPesquisar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setBorder(null);
        btnPesquisar.setContentAreaFilled(false);
        btnPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisar.setOpaque(true);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnBgLayout = new javax.swing.GroupLayout(jpnBg);
        jpnBg.setLayout(jpnBgLayout);
        jpnBgLayout.setHorizontalGroup(
            jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBgLayout.createSequentialGroup()
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(lblProduto))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtFot, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(ckbExcluir))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtaDescrição, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtaComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jpnBgLayout.setVerticalGroup(
            jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBgLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblProduto)
                .addGap(22, 22, 22)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ckbExcluir)))
                .addGap(26, 26, 26)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtaDescrição, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtaComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jpnBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 625));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        GerenciarBotoes();
        if (acaoTela == eAcaoTela.VISUALIZAR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }
        if (acaoTela == eAcaoTela.ABRIR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor(); 
        }
        
        ProdutoController prodController = new ProdutoController();

        ProdutoModel prod = new ProdutoModel();
        
        if (acaoTela == eAcaoTela.EDITAR.getValor() || acaoTela == eAcaoTela.EXCLUIR.getValor()) {
            prod = prodm;
        }
        
        prod = PreencherProduto(prod);
        
        boolean result = false;
        
        switch (acaoTela) {
            case 1:
                result = prodController.save(prod);
                break;
            case 5:
                result = prodController.update(prod);
                break;
            case 6:
                Date dt = new Date();

                prod.setDtDel(dt);

                if (this.usuSystem == null) {
                    prod.setUsuDel(1);
                } else {
                    prod.setUsuInclus(this.usuSystem.getId());
                }

                result = prodController.finishValidity(prod);
                break;
        }
        if (result) {

        }

        LimparCampos();
        LoadTable();
           
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed

        GerenciarBotoes();

        ProdutoController prodControll = new ProdutoController();
        ProdutoModel prod = new ProdutoModel();

        try {
            if (prod.validString(txtNome.getText())) {
                prod.setNomeProduto(txtNome.getText());
            }

            if (prod.validString(txtCategoria.getText())) {
                prod.setCategoria(txtCategoria.getText());
            }

            if (prod.validString(txtMarca.getText())) {
                prod.setMarca(txtMarca.getText());
            }
            
            if (prod.validString(txtFornecedor.getText())){
                prod.setIdFornecedor(Integer.parseInt(txtFornecedor.getText()));
            }
            
            if (prod.validString(txtQtd.getText())){
                prod.setQtd(Integer.parseInt(txtQtd.getText()));
            }
            
            if (prod.validString(txtValor.getText())){
                prod.setValor(Integer.parseInt(txtValor.getText()));
            }
            
            if (prod.validString(txtAvaliacao.getText())){
                prod.setAvaliacao(Integer.parseInt(txtAvaliacao.getText()));
            }
            

            if (prod.validString(txtValidade.getText())) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                prod.setDtValidade(formatter1.parse(txtValidade.getText()));
            }
            
            if (prod.validString(txtDesconto.getText())){
                prod.setAvaliacao(Integer.parseInt(txtDesconto.getText()));
            }
            
            if (prod.validString(txtFot.getText())) {
                prod.setFoto(txtFot.getText());
            }
            
            if (prod.validString(jTextArea2.getText())) {
                prod.setDescricaoProduto(jTextArea2.getText());
            }
            
            if (prod.validString(jTextArea1.getText())) {
                prod.setComentario(jTextArea1.getText());
            }
            

        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<ProdutoModel> produtos = ProdutoController.findAll(prod);
        LoadTableFilter(produtos);
    }//GEN-LAST:event_btnPesquisarActionPerformed


    
    private ProdutoModel PreencherProduto(ProdutoModel prodm) {
        
        if (prodm == null){
            prodm = new ProdutoModel();
        }
        
        try {
            if(prodm.validString(txtNome.getText())){
               prodm.setNomeProduto(txtNome.getText());
            }
            
            if(prodm.validString(txtCategoria.getText())){
               prodm.setCategoria(txtCategoria.getText());
            }
            
            if(prodm.validString(txtMarca.getText())){
               prodm.setMarca(txtMarca.getText());
            }
            
            /*if(prodm.validString(txtFornecedor.getText())){
               prodm.(txtFornecedor.getText());
            }*/
            
            if(prodm.validInt(Integer.parseInt(txtQtd.getText()))){
               prodm.setQtd(Integer.parseInt(txtQtd.getText()));
            }
            
            if(prodm.validInt(Integer.parseInt(txtValor.getText()))){
               prodm.setValor(Integer.parseInt(txtValor.getText()));
            }
            
            if(prodm.validInt(Integer.parseInt(txtAvaliacao.getText()))){
               prodm.setAvaliacao(Integer.parseInt(txtAvaliacao.getText()));
            }
            
            if(prodm.validString(txtValidade.getText())){
               SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
               prodm.setDtValidade(formatter1.parse(txtValidade.getText().replace("/", "-")));
            }
            
            if(prodm.validInt(Integer.parseInt(txtDesconto.getText()))){
               prodm.setPorcentagemDesc(Integer.parseInt(txtDesconto.getText()));
            }
            
            if(prodm.validString(txtFot.getText())){
               prodm.setFoto(txtFot.getText());
            }
            
            if(prodm.validString(jTextArea1.getText())){
               prodm.setComentario(jTextArea1.getText());
            }
            
            if(prodm.validString(jTextArea2.getText())){
               prodm.setDescricaoProduto(jTextArea2.getText());
            }
            
        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Produto.class.getName()).log(Level.SEVERE, null, ex);
        }
        return prodm;
    }

    private void LimparCampos() {
        txtNome.setText("");
        txtCategoria.setText("");
        txtMarca.setText("");
        txtFornecedor.setText("");
        txtQtd.setText("");
        txtValor.setText("");
        txtAvaliacao.setText("");
        txtValidade.setText("");
        txtDesconto.setText("");
        txtFot.setText("");
        jTextArea2.setText("");
        jTextArea1.setText("");
        
        
    }

    private void LoadTable() {
        ProdutoController prodController = new ProdutoController();
        ProdutoModel prodFiltro = new ProdutoModel();
        List<ProdutoModel> produtos = prodController.findAll(prodFiltro);
        
        DefaultTableModel tmProdutos = new DefaultTableModel();
        tmProdutos.addColumn("ID");
        tmProdutos.addColumn("Nome");
        tmProdutos.addColumn("Categoria");
        tmProdutos.addColumn("Marca");
        tmProdutos.addColumn("Fornecedor");
        tmProdutos.addColumn("Quantidade");
        tmProdutos.addColumn("Valor");
        tmProdutos.addColumn("Avaliação");
        tmProdutos.addColumn("Descrição");
        
        tblProdutos.setModel(tmProdutos);
        
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(100);
        
        tmProdutos.setRowCount(0);
        
        for(ProdutoModel prodm : produtos){
            tmProdutos.addRow(new String[] {String.valueOf(prodm.getId()),
                prodm.getNomeProduto(), prodm.getCategoria(), prodm.getMarca(), String.valueOf(prodm.getIdFornecedor()),
                String.valueOf(prodm.getQtd()),String.valueOf(prodm.getValor()), String.valueOf(prodm.getAvaliacao()),
                String.valueOf(prodm.getDtValidade()),prodm.getDescricaoProduto()});
        }
        
    }
    
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Produto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox ckbExcluir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JPanel jpnBg;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtAvaliacao;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtFornecedor;
    private javax.swing.JTextField txtFot;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtQtd;
    private javax.swing.JTextField txtValidade;
    private javax.swing.JTextField txtValor;
    private javax.swing.JScrollPane txtaComentario;
    private javax.swing.JScrollPane txtaDescrição;
    // End of variables declaration//GEN-END:variables

    private void GerenciarBotoes() {
        switch (acaoTela) {
            case 1:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 2:
                btnSalvar.setEnabled(true);
                btnPesquisar.setEnabled(true);
                break;
            case 3:
                btnPesquisar.setEnabled(true);
                btnSalvar.setEnabled(false);
                break;
            case 4:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(false);
                break;
            case 5:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 6:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
        }
    }



    private void LoadTableFilter(List<ProdutoModel> produtos) {
        
        DefaultTableModel tmProdutos = new DefaultTableModel();
        
        tmProdutos.addColumn("ID");
        tmProdutos.addColumn("Nome");
        tmProdutos.addColumn("Categoria");
        tmProdutos.addColumn("Marca");
        tmProdutos.addColumn("Fornecedor");
        tmProdutos.addColumn("Quantidade");
        tmProdutos.addColumn("Valor");
        tmProdutos.addColumn("Avaliação");
        tmProdutos.addColumn("Descrição");
        
        tblProdutos.setModel(tmProdutos);
        
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(100);
        
        tmProdutos.setRowCount(0);
        
        for(ProdutoModel prod : produtos){
            tmProdutos.addRow(new String[] {String.valueOf(prod.getId()), prod.getNomeProduto(),
            prod.getCategoria(), prod.getMarca(), String.valueOf(prod.getIdFornecedor()), String.valueOf(prod.getQtd()),
            String.valueOf(prod.getValor()), String.valueOf(prod.getAvaliacao()), prod.getDescricaoProduto()});
        }
        
    }


}
