/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loja.Presentation;

import java.text.ParseException;
import loja.Dominio.Util.PropertiesValidator;
import loja.Presentation.Controller.ProdutoController;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.parser.Entity;
import loja.Dominio.Model.FornecedorModel;
import loja.Dominio.Model.ProdutoModel;
import loja.Dominio.Model.UserModel;
import loja.Dominio.Util.eAcaoTela;
import loja.Presentation.Controller.FornecedorController;

/**
 *
 * @author Gustavo Nascimento
 */
public class Produto extends javax.swing.JFrame {

    /**
     * Creates new form Usuario
     */
    public Produto() {
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
        CarregarComboBox();
    }

    public Produto(UserModel user) {
        this.usuSystem = user;
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
        CarregarComboBox();
    }

    private UserModel usuSystem;
    private int acaoTela;
    private ProdutoModel prodm;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnBg = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        txtNome = new javax.swing.JTextField();
        txtCategoria = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        lblProduto = new javax.swing.JLabel();
        txtFot = new javax.swing.JTextField();
        txtValidade = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        txtAvaliacao = new javax.swing.JTextField();
        txtQtd = new javax.swing.JTextField();
        txtDesconto = new javax.swing.JTextField();
        ckbExcluir = new javax.swing.JCheckBox();
        txtComentario = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        cbxFornecedor = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnBg.setBackground(new java.awt.Color(201, 232, 242));

        tblProdutos.setBackground(new java.awt.Color(64, 87, 184));
        tblProdutos.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        tblProdutos.setForeground(new java.awt.Color(255, 255, 255));
        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblProdutos.setGridColor(new java.awt.Color(64, 87, 184));
        tblProdutos.setSelectionForeground(new java.awt.Color(64, 87, 184));
        tblProdutos.setShowGrid(true);
        jScrollPane1.setViewportView(tblProdutos);

        txtNome.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtNome.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        txtCategoria.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Categoria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        txtMarca.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtMarca.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Marca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        lblProduto.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        lblProduto.setText("Controle de Produtos");

        txtFot.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtFot.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        txtValidade.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtValidade.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Validade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        txtValor.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtValor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "R$", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        txtAvaliacao.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtAvaliacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Avaliação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        txtQtd.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtQtd.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quantidade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        txtDesconto.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtDesconto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Porcentagem %", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14))); // NOI18N

        ckbExcluir.setBackground(new java.awt.Color(201, 232, 242));
        ckbExcluir.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        ckbExcluir.setForeground(new java.awt.Color(204, 0, 0));
        ckbExcluir.setText("Excluir");

        txtComentario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comentário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14))); // NOI18N

        txtDescricao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Descrição", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Semibold", 1, 14))); // NOI18N

        btnSalvar.setBackground(new java.awt.Color(61, 189, 61));
        btnSalvar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar");
        btnSalvar.setBorder(null);
        btnSalvar.setBorderPainted(false);
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnPesquisar.setBackground(new java.awt.Color(51, 102, 255));
        btnPesquisar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Procurar");
        btnPesquisar.setBorder(null);
        btnPesquisar.setBorderPainted(false);
        btnPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(255, 153, 0));
        btnCancelar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(null);
        btnCancelar.setBorderPainted(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel1.setText("Fornecedor");

        javax.swing.GroupLayout jpnBgLayout = new javax.swing.GroupLayout(jpnBg);
        jpnBg.setLayout(jpnBgLayout);
        jpnBgLayout.setHorizontalGroup(
            jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBgLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblProduto)
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtFot, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(cbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckbExcluir)
                            .addGroup(jpnBgLayout.createSequentialGroup()
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(350, Short.MAX_VALUE))
        );
        jpnBgLayout.setVerticalGroup(
            jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBgLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblProduto)
                .addGap(18, 18, 18)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckbExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jpnBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CarregarComboBox() {
        FornecedorController fornecedorController = new FornecedorController();
        FornecedorModel fornecedor = new FornecedorModel();
        List<FornecedorModel> fonecedores = fornecedorController.findAll(fornecedor);

        for (FornecedorModel forne : fonecedores) {

            cbxFornecedor.addItem(forne.getNomeFantasia());
        }
    }

    private FornecedorModel recuperarFornecedor(String entity) {

        FornecedorController fornecedorController = new FornecedorController();
        FornecedorModel fornecedor = new FornecedorModel();
        fornecedor.setNomeFantasia(entity);
        List<FornecedorModel> fonecedores = fornecedorController.findAll(fornecedor);
        return fonecedores.get(0);
    }

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        GerenciarBotoes();
        if (acaoTela == eAcaoTela.VISUALIZAR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }
        if (acaoTela == eAcaoTela.ABRIR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }

        ProdutoController prodController = new ProdutoController();

        boolean valid = PreencherProduto(prodm);

        if (valid) {

            switch (acaoTela) {
                case 1:
                    if (prodController.save(prodm)) {
                        JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso", "Cadastro", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Houve no cadastro do produto", "Erro", JOptionPane.INFORMATION_MESSAGE);
                    }
                    break;
                case 5:
                    if (prodController.update(prodm)) {
                        JOptionPane.showMessageDialog(null, "Produto atualizado com sucesso", "Alteração", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Houve ao atualizar o Produto", "Erro", JOptionPane.INFORMATION_MESSAGE);
                    }
                    break;
                case 6:
                    Date dt = new Date();

                    prodm.setDtDel(dt);

                    if (this.usuSystem == null) {
                        prodm.setUsuDel(1);
                    } else {
                        prodm.setUsuInclus(this.usuSystem.getId());
                    }

                    if (prodController.finishValidity(prodm)) {
                        JOptionPane.showMessageDialog(null, "Produto deletado com sucesso", "Alteração", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Houve um erro na exclusão do Produto", "Erro", JOptionPane.INFORMATION_MESSAGE);
                    }

                    break;
            }

            LimparCampos();
            LoadTable();
            acaoTela = eAcaoTela.ABRIR.getValor();
            GerenciarBotoes();
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        GerenciarBotoes();

        ProdutoController prodControll = new ProdutoController();
        ProdutoModel prod = new ProdutoModel();

        try {
            if (prod.validString(txtNome.getText())) {
                prod.setNomeProduto(txtNome.getText());
            }

            if (prod.validString(txtCategoria.getText())) {
                prod.setCategoria(txtCategoria.getText());
            }

            if (prod.validString(txtMarca.getText())) {
                prod.setMarca(txtMarca.getText());
            }

            if (prod.validString(cbxFornecedor.getSelectedItem().toString())) {
                FornecedorModel fornece = recuperarFornecedor(cbxFornecedor.getSelectedItem().toString());
                prod.setIdFornecedor(fornece.getId());
            }

            if (prod.validString(txtQtd.getText())) {
                prod.setQtd(Integer.parseInt(txtQtd.getText()));
            }

            if (prod.validString(txtValor.getText())) {
                prod.setValor(Integer.parseInt(txtValor.getText()));
            }

            if (prod.validString(txtAvaliacao.getText())) {
                prod.setAvaliacao(Integer.parseInt(txtAvaliacao.getText()));
            }

            if (prod.validString(txtValidade.getText())) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                prod.setDtValidade(formatter1.parse(txtValidade.getText()));
            }

            if (prod.validString(txtDesconto.getText())) {
                prod.setAvaliacao(Integer.parseInt(txtDesconto.getText()));
            }

            if (prod.validString(txtFot.getText())) {
                prod.setFoto(txtFot.getText());
            }

            if (prod.validString(txtDescricao.getText())) {
                prod.setDescricaoProduto(txtDescricao.getText());
            }

            if (prod.validString(txtComentario.getText())) {
                prod.setComentario(txtComentario.getText());
            }

        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<ProdutoModel> produtos = ProdutoController.findAll(prod);
        LoadTableFilter(produtos);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        LimparCampos();
        acaoTela = eAcaoTela.ABRIR.getValor();
        GerenciarBotoes();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private boolean PreencherProduto(ProdutoModel entity) {

        if (entity == null) {
            entity = new ProdutoModel();
        }

        try {
            if (entity.validString(txtNome.getText())) {
                entity.setNomeProduto(txtNome.getText());
            } else {

                JOptionPane.showMessageDialog(null, "Por favor preencher o nome ou com caracteres mínimos", "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (entity.validString(txtCategoria.getText())) {
                entity.setCategoria(txtCategoria.getText());
            } else {

                JOptionPane.showMessageDialog(null, "Por favor preencher a categoria ou com caracteres mínimos", "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
                return false;
            }
            if (entity.validString(txtMarca.getText())) {
                entity.setMarca(txtMarca.getText());
            } else {

                JOptionPane.showMessageDialog(null, "Por favor preencher a marca ou com caracteres mínimos", "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
                return false;
            }
            if (entity.validString(cbxFornecedor.getSelectedItem().toString())) {
                FornecedorModel fornece = recuperarFornecedor(cbxFornecedor.getSelectedItem().toString());
                entity.setIdFornecedor(fornece.getId());
            } else {

                JOptionPane.showMessageDialog(null, "Por favor preencher selecionar o fornecedor", "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (entity.validInt(Integer.parseInt(txtQtd.getText()))) {
                entity.setQtd(Integer.parseInt(txtQtd.getText()));
            } else {

                JOptionPane.showMessageDialog(null, "Por favor preencher a qtd. de produto ou com caracteres mínimos", "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
                return false;
            }
            if (entity.validString(txtValor.getText())) {
                entity.setValor(Double.parseDouble(txtValor.getText()));
            } else {

                JOptionPane.showMessageDialog(null, "Por favor preencher o valor do produto ou com caracteres mínimos", "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
                return false;
            }

            if (entity.validString(txtAvaliacao.getText())) {
                entity.setAvaliacao(Integer.parseInt(txtAvaliacao.getText()));
            }

            if (entity.validString(txtValidade.getText())) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                entity.setDtValidade(formatter1.parse(txtValidade.getText().replace("/", "-")));
            }

            if (entity.validString(txtDesconto.getText())) {
                entity.setPorcentagemDesc(Double.parseDouble(txtDesconto.getText()));
            }

            if (entity.validString(txtComentario.getText())) {
                entity.setComentario(txtComentario.getText());
            }

            if (entity.validString(txtDescricao.getText())) {
                entity.setDescricaoProduto(txtDescricao.getText());
            }

        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Produto.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.prodm = entity;
        return true;
    }

    private void LimparCampos() {
        txtNome.setText("");
        txtCategoria.setText("");
        txtMarca.setText("");
        txtQtd.setText("");
        txtValor.setText("");
        txtAvaliacao.setText("");
        txtValidade.setText("");
        txtDesconto.setText("");
        txtFot.setText("");
        txtDescricao.setText("");
        txtComentario.setText("");

    }

    private void LoadTable() {
        ProdutoController prodController = new ProdutoController();
        ProdutoModel prodFiltro = new ProdutoModel();
        List<ProdutoModel> produtos = prodController.findAll(prodFiltro);

        DefaultTableModel tmProdutos = new DefaultTableModel();
        tmProdutos.addColumn("ID");
        tmProdutos.addColumn("Nome");
        tmProdutos.addColumn("Categoria");
        tmProdutos.addColumn("Marca");
        tmProdutos.addColumn("Fornecedor");
        tmProdutos.addColumn("Quantidade");
        tmProdutos.addColumn("Valor");
        tmProdutos.addColumn("Avaliação");
        tmProdutos.addColumn("Descrição");

        tblProdutos.setModel(tmProdutos);

        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(100);

        tmProdutos.setRowCount(0);

        for (ProdutoModel prodm : produtos) {
            tmProdutos.addRow(new String[]{String.valueOf(prodm.getId()),
                prodm.getNomeProduto(), prodm.getCategoria(), prodm.getMarca(), String.valueOf(prodm.getIdFornecedor()),
                String.valueOf(prodm.getQtd()), String.valueOf(prodm.getValor()), String.valueOf(prodm.getAvaliacao()),
                String.valueOf(prodm.getDtValidade()), prodm.getDescricaoProduto()});
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Produto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Produto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxFornecedor;
    private javax.swing.JCheckBox ckbExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnBg;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtAvaliacao;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtComentario;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtFot;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtQtd;
    private javax.swing.JTextField txtValidade;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables

    private void GerenciarBotoes() {
        switch (acaoTela) {
            case 1:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 2:
                btnSalvar.setEnabled(true);
                btnPesquisar.setEnabled(true);
                break;
            case 3:
                btnPesquisar.setEnabled(true);
                btnSalvar.setEnabled(false);
                break;
            case 4:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(false);
                break;
            case 5:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
            case 6:
                btnPesquisar.setEnabled(false);
                btnSalvar.setEnabled(true);
                break;
        }
    }

    private void LoadTableFilter(List<ProdutoModel> produtos) {

        DefaultTableModel tmProdutos = new DefaultTableModel();

        tmProdutos.addColumn("ID");
        tmProdutos.addColumn("Nome");
        tmProdutos.addColumn("Categoria");
        tmProdutos.addColumn("Marca");
        tmProdutos.addColumn("Fornecedor");
        tmProdutos.addColumn("Quantidade");
        tmProdutos.addColumn("Valor");
        tmProdutos.addColumn("Avaliação");
        tmProdutos.addColumn("Descrição");

        tblProdutos.setModel(tmProdutos);

        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(40);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblProdutos.getColumnModel().getColumn(0).setPreferredWidth(100);

        tmProdutos.setRowCount(0);

        for (ProdutoModel prod : produtos) {
            tmProdutos.addRow(new String[]{String.valueOf(prod.getId()), prod.getNomeProduto(),
                prod.getCategoria(), prod.getMarca(), String.valueOf(prod.getIdFornecedor()), String.valueOf(prod.getQtd()),
                String.valueOf(prod.getValor()), String.valueOf(prod.getAvaliacao()), prod.getDescricaoProduto()});
        }

    }

}
