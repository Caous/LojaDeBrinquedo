/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loja.Presentation;

import loja.Dominio.Util.PropertiesValidator;
import loja.Presentation.Controller.ClienteController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import loja.Dominio.Model.ClienteModel;
import loja.Dominio.Util.eAcaoTela;

/**
 *
 * @author Gustavo Nascimento
 */
public class Cliente extends javax.swing.JFrame {

    /**
     * Creates new form Usuario
     */
    public Cliente() {
        initComponents();
        LoadTable();
        acaoTela = eAcaoTela.ABRIR.getValor();
    }

    private int acaoTela;
    private ClienteModel cli;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpnBg = new javax.swing.JPanel();
        rbtEmpresa = new javax.swing.JRadioButton();
        txtNome = new javax.swing.JTextField();
        txtNomeFan = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtContResp = new javax.swing.JTextField();
        txtCPFCNPJ = new javax.swing.JTextField();
        txtEM = new javax.swing.JTextField();
        txtTel = new javax.swing.JTextField();
        txtCel = new javax.swing.JTextField();
        txtDtNasc = new javax.swing.JTextField();
        rbtMasc = new javax.swing.JRadioButton();
        rbtFem = new javax.swing.JRadioButton();
        txtEndereco = new javax.swing.JTextField();
        txtCEP = new javax.swing.JTextField();
        txtEstado = new javax.swing.JTextField();
        txtMunicipio = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        ckbExcluir = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        txtIM = new javax.swing.JTextField();
        lblCtrlCliente = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnBg.setBackground(new java.awt.Color(79, 109, 234));
        jpnBg.setPreferredSize(new java.awt.Dimension(1280, 720));

        rbtEmpresa.setBackground(new java.awt.Color(79, 109, 234));
        rbtEmpresa.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        rbtEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        rbtEmpresa.setText("Empresa");
        rbtEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtEmpresaActionPerformed(evt);
            }
        });

        txtNome.setBackground(new java.awt.Color(79, 109, 234));
        txtNome.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtNome.setForeground(new java.awt.Color(255, 255, 255));
        txtNome.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtNomeFan.setBackground(new java.awt.Color(79, 109, 234));
        txtNomeFan.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtNomeFan.setForeground(new java.awt.Color(255, 255, 255));
        txtNomeFan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome Fantasia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtEmail.setBackground(new java.awt.Color(79, 109, 234));
        txtEmail.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtEmail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "E-mail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtContResp.setBackground(new java.awt.Color(79, 109, 234));
        txtContResp.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtContResp.setForeground(new java.awt.Color(255, 255, 255));
        txtContResp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cont. Responsável", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtCPFCNPJ.setBackground(new java.awt.Color(79, 109, 234));
        txtCPFCNPJ.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtCPFCNPJ.setForeground(new java.awt.Color(255, 255, 255));
        txtCPFCNPJ.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CPF/CNPJ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtEM.setBackground(new java.awt.Color(79, 109, 234));
        txtEM.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtEM.setForeground(new java.awt.Color(255, 255, 255));
        txtEM.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtTel.setBackground(new java.awt.Color(79, 109, 234));
        txtTel.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtTel.setForeground(new java.awt.Color(255, 255, 255));
        txtTel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Telefone", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtCel.setBackground(new java.awt.Color(79, 109, 234));
        txtCel.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtCel.setForeground(new java.awt.Color(255, 255, 255));
        txtCel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Celular", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtDtNasc.setBackground(new java.awt.Color(79, 109, 234));
        txtDtNasc.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtDtNasc.setForeground(new java.awt.Color(255, 255, 255));
        txtDtNasc.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dt. Nascimento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        rbtMasc.setBackground(new java.awt.Color(79, 109, 234));
        rbtMasc.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        rbtMasc.setForeground(new java.awt.Color(255, 255, 255));
        rbtMasc.setText("Masculino");

        rbtFem.setBackground(new java.awt.Color(79, 109, 234));
        rbtFem.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        rbtFem.setForeground(new java.awt.Color(255, 255, 255));
        rbtFem.setText("Feminino");

        txtEndereco.setBackground(new java.awt.Color(79, 109, 234));
        txtEndereco.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtEndereco.setForeground(new java.awt.Color(255, 255, 255));
        txtEndereco.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Endereço", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtCEP.setBackground(new java.awt.Color(79, 109, 234));
        txtCEP.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtCEP.setForeground(new java.awt.Color(255, 255, 255));
        txtCEP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CEP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtEstado.setBackground(new java.awt.Color(79, 109, 234));
        txtEstado.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtEstado.setForeground(new java.awt.Color(255, 255, 255));
        txtEstado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        txtMunicipio.setBackground(new java.awt.Color(79, 109, 234));
        txtMunicipio.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtMunicipio.setForeground(new java.awt.Color(255, 255, 255));
        txtMunicipio.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Municipio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        btnPesquisar.setBackground(new java.awt.Color(51, 153, 0));
        btnPesquisar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        btnPesquisar.setText("Procurar");
        btnPesquisar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisar.setContentAreaFilled(false);
        btnPesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnPesquisar.setOpaque(true);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnSalvar.setBackground(new java.awt.Color(64, 87, 184));
        btnSalvar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar");
        btnSalvar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSalvar.setOpaque(true);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        ckbExcluir.setBackground(new java.awt.Color(79, 109, 234));
        ckbExcluir.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        ckbExcluir.setForeground(new java.awt.Color(255, 255, 255));
        ckbExcluir.setText("Excluir");
        ckbExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ckbExcluirMouseClicked(evt);
            }
        });

        tblClientes.setBackground(new java.awt.Color(64, 87, 184));
        tblClientes.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        tblClientes.setForeground(new java.awt.Color(255, 255, 255));
        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblClientes.setGridColor(new java.awt.Color(64, 87, 184));
        tblClientes.setSelectionForeground(new java.awt.Color(79, 109, 234));
        tblClientes.setShowGrid(true);
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        txtIM.setBackground(new java.awt.Color(79, 109, 234));
        txtIM.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        txtIM.setForeground(new java.awt.Color(255, 255, 255));
        txtIM.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "IM", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rubik Light", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        lblCtrlCliente.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        lblCtrlCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblCtrlCliente.setText("Controle de Clientes");

        btnCancelar.setBackground(new java.awt.Color(255, 51, 51));
        btnCancelar.setFont(new java.awt.Font("Rubik Light", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancelar.setOpaque(true);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnBgLayout = new javax.swing.GroupLayout(jpnBg);
        jpnBg.setLayout(jpnBgLayout);
        jpnBgLayout.setHorizontalGroup(
            jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBgLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCtrlCliente)
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(rbtEmpresa)
                        .addGap(715, 715, 715)
                        .addComponent(ckbExcluir))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtNomeFan, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtContResp, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtIM, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtEM, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtCel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(rbtMasc)
                        .addGap(7, 7, 7)
                        .addComponent(rbtFem))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jpnBgLayout.setVerticalGroup(
            jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnBgLayout.createSequentialGroup()
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lblCtrlCliente)
                        .addGap(18, 18, 18)
                        .addComponent(rbtEmpresa))
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(ckbExcluir)))
                .addGap(23, 23, 23)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeFan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnBgLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtMasc)
                            .addComponent(rbtFem))))
                .addGap(6, 6, 6)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnBgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jpnBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtEmpresaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtEmpresaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        if (acaoTela == eAcaoTela.VISUALIZAR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }
        if (acaoTela == eAcaoTela.ABRIR.getValor()) {
            acaoTela = eAcaoTela.SALVAR.getValor();
        }

        ClienteController cliController = new ClienteController();

        ClienteModel cliente = new ClienteModel();

        if (acaoTela == eAcaoTela.EDITAR.getValor() || acaoTela == eAcaoTela.EXCLUIR.getValor()) {
            cliente = cli;
        }

        PreencherCliente(cli);

        switch (eAcaoTela.EDITAR.getValor()) {
            case 1:
                cliController.save(cliente);
                break;
            case 2:
                cliController.save(cliente);
                break;
            case 5:
                cliController.update(cliente);
                break;
            case 6:
                cliController.delete(cliente);
                break;
        }

        LimparCampos();
        LoadTable();


    }//GEN-LAST:event_btnSalvarActionPerformed

    private void PreencherCliente(ClienteModel cli) {

        try {
            if (cli.validString(txtNome.getText())) {
                cli.setNome(txtNome.getText());
            }

            if (cli.validString(txtEmail.getText())) {
                cli.setEmail(txtEmail.getText());
            }

            if (cli.validString(txtCPFCNPJ.getText())) {
                cli.setCpfCnpj(txtCPFCNPJ.getText());
            }

            if (cli.validString(txtTel.getText())) {
                cli.setTelefone(txtTel.getText());
            }
            if (cli.validString(txtCel.getText())) {
                cli.setCelular(txtCel.getText());
            }
            if (rbtFem.isSelected()) {
                cli.setSexo("Feminino");
            }
            if (rbtMasc.isSelected()) {
                cli.setSexo("Masculino");
            }
            if (cli.validString(txtEndereco.getText())) {
                cli.setEndereco(txtEndereco.getText());
            }
            if (cli.validString(txtCEP.getText())) {
                cli.setCEP(txtCEP.getText());
            }
            if (cli.validString(txtEstado.getText())) {
                cli.setEstado(txtEstado.getText());
            }
            if (cli.validString(txtMunicipio.getText())) {
                cli.setMunicipio(txtMunicipio.getText());
            }
            if (cli.validString(txtDtNasc.getText())) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                cli.setDtNasc(formatter1.parse(txtDtNasc.getText().replace("/", "-")));
            }
            if (rbtEmpresa.isSelected()) {
                cli.setTipoCliente(1);

                if (cli.validString(txtNomeFan.getText())) {
                    cli.setNomeFantasia(txtNomeFan.getText());
                }

                if (cli.validString(txtEM.getText())) {
                    cli.setEM(txtEM.getText());
                }
                if (cli.validString(txtIM.getText())) {
                    cli.setIM(txtIM.getText());
                }
                if (cli.validString(txtContResp.getText())) {
                    cli.setContatoResposavel(txtContResp.getText());
                }
            }
        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed

        ClienteController cliController = new ClienteController();
        ClienteModel cliente = new ClienteModel();

        try {
            if (cliente.validString(txtNome.getText())) {
                cliente.setNome(txtNome.getText());
            }

            if (cliente.validString(txtEmail.getText())) {
                cliente.setEmail(txtEmail.getText());
            }

            if (cliente.validString(txtCPFCNPJ.getText())) {
                cliente.setCpfCnpj(txtCPFCNPJ.getText());
            }

            if (cliente.validString(txtTel.getText())) {
                cliente.setTelefone(txtTel.getText());
            }
            if (cliente.validString(txtCel.getText())) {
                cliente.setCelular(txtCel.getText());
            }
            if (rbtFem.isSelected()) {
                cliente.setSexo("Feminino");
            }
            if (rbtMasc.isSelected()) {
                cliente.setSexo("Masculino");
            }
            if (cliente.validString(txtEndereco.getText())) {
                cliente.setEndereco(txtEndereco.getText());
            }
            if (cliente.validString(txtCEP.getText())) {
                cliente.setCEP(txtCEP.getText());
            }
            if (cliente.validString(txtEstado.getText())) {
                cliente.setEstado(txtEstado.getText());
            }
            if (cliente.validString(txtMunicipio.getText())) {
                cliente.setMunicipio(txtMunicipio.getText());
            }
            if (cliente.validString(txtDtNasc.getText())) {
                SimpleDateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
                cliente.setDtNasc(formatter1.parse(txtDtNasc.getText().replace("/", "-")));
            }
            if (rbtEmpresa.isSelected()) {
                cliente.setTipoCliente(1);

                if (cliente.validString(txtNomeFan.getText())) {
                    cliente.setNomeFantasia(txtNomeFan.getText());
                }

                if (cliente.validString(txtEM.getText())) {
                    cliente.setEM(txtEM.getText());
                }
                if (cliente.validString(txtIM.getText())) {
                    cliente.setIM(txtIM.getText());
                }
                if (cliente.validString(txtContResp.getText())) {
                    cliente.setContatoResposavel(txtContResp.getText());
                }
            }

        } catch (PropertiesValidator ex) {
            JOptionPane.showMessageDialog(null, ex, "Campos Obrigatórios", JOptionPane.WARNING_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<ClienteModel> clientes = cliController.findAll(cliente);
        LoadTableFilter(clientes);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        if (tblClientes.getSelectedRow() >= 0) {
            //HabilitarFormulario();

            acaoTela = eAcaoTela.EDITAR.getValor();

            int id = Integer.parseInt(tblClientes.getModel().getValueAt(tblClientes.getSelectedRow(), 0).toString());

            CarregarCampos(id);

        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma categoria para editar!");
        }
    }//GEN-LAST:event_tblClientesMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        LimparCampos();
        acaoTela = eAcaoTela.VISUALIZAR.getValor();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void ckbExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ckbExcluirMouseClicked
        if (ckbExcluir.isSelected()) {
            acaoTela = eAcaoTela.EXCLUIR.getValor();
        } else {
            acaoTela = eAcaoTela.EDITAR.getValor();
        }
    }//GEN-LAST:event_ckbExcluirMouseClicked

    private void LimparCampos() {
        txtNome.setText("");
        txtNomeFan.setText("");
        txtEmail.setText("");
        txtContResp.setText("");
        txtCPFCNPJ.setText("");
        txtIM.setText("");
        txtEM.setText("");
        txtTel.setText("");
        txtDtNasc.setText("");
        txtEndereco.setText("");
        txtCEP.setText("");
        txtEstado.setText("");
        txtMunicipio.setText("");

        cli = null;
    }

    public void LoadTable() {

        ClienteController cliController = new ClienteController();
        ClienteModel cliFiltro = new ClienteModel();
        List<ClienteModel> clientes = cliController.findAll(cliFiltro);

        DefaultTableModel tmClientes = new DefaultTableModel();
        tmClientes.addColumn("ID");
        tmClientes.addColumn("Nome");
        tmClientes.addColumn("Nome Fantasia");
        tmClientes.addColumn("Empresa");
        tmClientes.addColumn("Cpf/Cnjp");
        tmClientes.addColumn("E-mail");
        tmClientes.addColumn("Celular");
        tmClientes.addColumn("Endereço");
        tmClientes.addColumn("Ativo");

        tblClientes.setModel(tmClientes);

        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(250);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);

        tmClientes.setRowCount(0);

        for (ClienteModel cli : clientes) {
            tmClientes.addRow(new String[]{String.valueOf(cli.getId()),
                cli.getNome(), cli.getNomeFantasia(), String.valueOf(cli.getTipoCliente()), cli.getCpfCnpj(), cli.getEmail(), cli.getCelular(), cli.getEndereco(), "Ativo"});
        }

    }

    public void LoadTableFilter(List<ClienteModel> clientes) {

        DefaultTableModel tmClientes = new DefaultTableModel();
        tmClientes.addColumn("ID");
        tmClientes.addColumn("Nome");
        tmClientes.addColumn("Nome Fantasia");
        tmClientes.addColumn("Empresa");
        tmClientes.addColumn("Cpf/Cnjp");
        tmClientes.addColumn("E-mail");
        tmClientes.addColumn("Celular");
        tmClientes.addColumn("Endereço");
        tmClientes.addColumn("Ativo");

        tblClientes.setModel(tmClientes);

        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(200);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblClientes.getColumnModel().getColumn(1).setPreferredWidth(250);
        tblClientes.getColumnModel().getColumn(0).setPreferredWidth(50);

        tmClientes.setRowCount(0);

        for (ClienteModel cli : clientes) {
            tmClientes.addRow(new String[]{String.valueOf(cli.getId()),
                cli.getNome(), cli.getNomeFantasia(), String.valueOf(cli.getTipoCliente()), cli.getCpfCnpj(), cli.getEmail(), cli.getCelular(), cli.getEndereco(), "Ativo"});
        }

    }

    public void CarregarCampos(int id) {

        ClienteController cliController = new ClienteController();

        cli = cliController.findId(id);

        txtNome.setText(cli.getNome());
        txtNomeFan.setText(cli.getNomeFantasia());
        txtEmail.setText(cli.getEmail());
        txtContResp.setText(cli.getContatoResposavel());
        txtCPFCNPJ.setText(cli.getCpfCnpj());
        txtIM.setText(cli.getIM());
        txtEM.setText(cli.getEM());
        txtTel.setText(cli.getTelefone());
        txtDtNasc.setText(cli.getDtNasc().toString());
        txtEndereco.setText(cli.getEndereco());
        txtCEP.setText(cli.getCEP());
        txtEstado.setText(cli.getEstado());
        txtMunicipio.setText(cli.getMunicipio());

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox ckbExcluir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpnBg;
    private javax.swing.JLabel lblCtrlCliente;
    private javax.swing.JRadioButton rbtEmpresa;
    private javax.swing.JRadioButton rbtFem;
    private javax.swing.JRadioButton rbtMasc;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtCEP;
    private javax.swing.JTextField txtCPFCNPJ;
    private javax.swing.JTextField txtCel;
    private javax.swing.JTextField txtContResp;
    private javax.swing.JTextField txtDtNasc;
    private javax.swing.JTextField txtEM;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtIM;
    private javax.swing.JTextField txtMunicipio;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeFan;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables
}
